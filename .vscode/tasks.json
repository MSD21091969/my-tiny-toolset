{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "Test All Tools",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-Command",
				"$tools = @('code_analyzer', 'mapping_analyzer', 'excel_exporter', 'version_tracker'); foreach ($tool in $tools) { Write-Host \"Testing $tool...\"; python \"TOOLSET\\$tool.py\" --help | Select-Object -First 3; Write-Host \"\" }"
			],
			"group": "test",
			"problemMatcher": []
		},
		{
			"label": "Regenerate Tool Wrappers",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-Command",
				"$tools = @('code_analyzer', 'mapping_analyzer', 'excel_exporter', 'version_tracker'); foreach ($tool in $tools) { $batContent = \"@echo off`npython `\"%~dp0$tool.py`\" %*\"; Set-Content -Path \"TOOLSET\\$tool.bat\" -Value $batContent -Force; Write-Host \"Generated $tool.bat\" }"
			],
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "Update Submodules",
			"type": "shell",
			"command": "git",
			"args": [
				"submodule",
				"update",
				"--remote",
				"--recursive"
			],
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "Toolset Health Check",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-Command",
				"Write-Host 'Toolset Status:' -ForegroundColor Cyan; Write-Host ''; Write-Host 'Tools:' -ForegroundColor Yellow; $tools = @('code_analyzer', 'mapping_analyzer', 'excel_exporter', 'version_tracker'); foreach ($tool in $tools) { if (Test-Path \"TOOLSET\\$tool.py\") { Write-Host \"✓ $tool.py\" -ForegroundColor Green } else { Write-Host \"❌ $tool.py\" -ForegroundColor Red } }; Write-Host ''; Write-Host 'Batch Wrappers:' -ForegroundColor Yellow; foreach ($tool in $tools) { if (Test-Path \"TOOLSET\\$tool.bat\") { Write-Host \"✓ $tool.bat\" -ForegroundColor Green } else { Write-Host \"❌ $tool.bat\" -ForegroundColor Red } }; Write-Host ''; Write-Host 'Key Collections:' -ForegroundColor Yellow; $collections = @('CONFIGS/fastapi-configs', 'PROMPTS/awesome-prompts'); foreach ($col in $collections) { if (Test-Path $col) { Write-Host \"✓ $col\" -ForegroundColor Green } else { Write-Host \"❌ $col\" -ForegroundColor Red } }"
			],
			"group": "test",
			"problemMatcher": []
		}
	]
}