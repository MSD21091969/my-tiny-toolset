{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Analyze Current Branch",
            "type": "shell",
            "command": "python",
            "args": [
                "${env:MY_TOOLSET}\\version_tracker.py",
                "${workspaceFolder}",
                "--version",
                "${input:versionNumber}",
                "--json",
                "--yaml"
            ],
            "group": "test",
            "problemMatcher": [],
            "presentation": {
                "echo": true,
                "reveal": "always",
                "panel": "new"
            }
        },
        {
            "label": "Quick Code Analysis",
            "type": "shell",
            "command": "python",
            "args": [
                "${env:MY_TOOLSET}\\code_analyzer.py",
                "${workspaceFolder}",
                "--json",
                "--csv"
            ],
            "group": "test",
            "problemMatcher": []
        },
        {
            "label": "Generate Mapping Report",
            "type": "shell",
            "command": "python",
            "args": [
                "${env:MY_TOOLSET}\\mapping_analyzer.py",
                "${workspaceFolder}",
                "--html",
                "--json"
            ],
            "group": "test",
            "problemMatcher": []
        },
        {
            "label": "Export to Excel",
            "type": "shell",
            "command": "python",
            "args": [
                "${env:MY_TOOLSET}\\excel_exporter.py",
                "${workspaceFolder}",
                "--output",
                ".tool-outputs/excel/analysis_${input:versionNumber}.xlsx"
            ],
            "group": "test",
            "problemMatcher": []
        },
        {
            "label": "Full Analysis (PR Ready)",
            "type": "shell",
            "command": "powershell",
            "args": [
                "-Command",
                "$version = '${input:versionNumber}'; python \"$env:MY_TOOLSET\\version_tracker.py\" . --version $version --json --yaml --html; python \"$env:MY_TOOLSET\\mapping_analyzer.py\" . --html; python \"$env:MY_TOOLSET\\excel_exporter.py\" . --output \".tool-outputs/excel/analysis_$version.xlsx\"; Write-Host '✓ Analysis complete! Check .tool-outputs/' -ForegroundColor Green"
            ],
            "group": "test",
            "problemMatcher": []
        },
        {
            "label": "Compare with Baseline",
            "type": "shell",
            "command": "powershell",
            "args": [
                "-Command",
                "Write-Host 'Creating baseline...' -ForegroundColor Yellow; git stash; python \"$env:MY_TOOLSET\\version_tracker.py\" . --version baseline --json; git stash pop; Write-Host 'Analyzing current state...' -ForegroundColor Yellow; python \"$env:MY_TOOLSET\\version_tracker.py\" . --version current --json; Write-Host '✓ Compare .tool-outputs/analysis/baseline vs current' -ForegroundColor Green"
            ],
            "group": "test",
            "problemMatcher": []
        },
        {
            "label": "Open Mapping Dashboard",
            "type": "shell",
            "command": "powershell",
            "args": [
                "-Command",
                "if (Test-Path '.tool-outputs/mappings/mapping_dashboard.html') { Start-Process '.tool-outputs/mappings/mapping_dashboard.html' } else { Write-Host 'Dashboard not found. Run: Generate Mapping Report' -ForegroundColor Yellow }"
            ],
            "group": "test",
            "problemMatcher": []
        },
        {
            "label": "Clean Tool Outputs",
            "type": "shell",
            "command": "powershell",
            "args": [
                "-Command",
                "if (Test-Path '.tool-outputs') { Remove-Item -Recurse -Force '.tool-outputs'; Write-Host '✓ Cleaned .tool-outputs/' -ForegroundColor Green } else { Write-Host 'No outputs to clean' -ForegroundColor Yellow }"
            ],
            "group": "build",
            "problemMatcher": []
        }
    ],
    "inputs": [
        {
            "id": "versionNumber",
            "type": "promptString",
            "description": "Enter version number (e.g., 1.0.0, feature-name, PR-123)",
            "default": "1.0.0"
        }
    ]
}
